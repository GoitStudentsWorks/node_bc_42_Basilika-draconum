{"version":3,"file":"static/js/381.a3adc55d.chunk.js","mappings":"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","sources":["images/auth-svg/auth.svg","webpack://goose-track/./src/components/AuthNavigate/authNavigate.module.scss?386e","components/AuthNavigate/AuthNavigate.jsx","webpack://goose-track/./src/components/RegisterForm/registerForm.module.scss?85e2","components/RegisterForm/RegisterForm.jsx","pages/AuthPage/RegisterPage.jsx"],"sourcesContent":["var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAuth(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-log-in\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.5556,\n    d: \"M20.694 1.917h1.878c2.629 0 3.944 0 4.948 0.512 0.883 0.45 1.601 1.168 2.051 2.051 0.512 1.004 0.512 2.319 0.512 4.948v13.144c0 2.629 0 3.944-0.512 4.948-0.45 0.883-1.168 1.601-2.051 2.051-1.004 0.512-2.319 0.512-4.948 0.512h-1.878M12.87 8.176l7.824 7.824M20.694 16l-7.824 7.824M20.694 16h-18.778\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-done\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.133 18.4l-2.9-2.9c-0.244-0.244-0.55-0.361-0.916-0.349s-0.673 0.138-0.917 0.383-0.367 0.556-0.367 0.933c0 0.378 0.122 0.689 0.367 0.933l3.8 3.8c0.244 0.244 0.556 0.367 0.933 0.367s0.689-0.122 0.933-0.367l7.567-7.567c0.244-0.244 0.361-0.55 0.351-0.917s-0.14-0.672-0.384-0.916-0.556-0.367-0.933-0.367c-0.378 0-0.689 0.122-0.933 0.367l-6.6 6.6zM16 29.333c-1.844 0-3.578-0.35-5.2-1.051s-3.033-1.649-4.233-2.849-2.15-2.611-2.849-4.233c-0.7-1.622-1.051-3.356-1.051-5.2s0.35-3.578 1.051-5.2c0.7-1.622 1.649-3.033 2.849-4.233s2.611-2.15 4.233-2.851c1.622-0.7 3.356-1.049 5.2-1.049s3.578 0.35 5.2 1.049c1.622 0.7 3.033 1.651 4.233 2.851s2.15 2.611 2.849 4.233c0.7 1.622 1.051 3.356 1.051 5.2s-0.35 3.578-1.051 5.2c-0.7 1.622-1.649 3.033-2.849 4.233s-2.611 2.15-4.233 2.849c-1.622 0.7-3.356 1.051-5.2 1.051zM16 26.667c2.956 0 5.472-1.039 7.551-3.116s3.116-4.595 3.116-7.551c0-2.956-1.039-5.472-3.116-7.551s-4.595-3.116-7.551-3.116c-2.956 0-5.472 1.039-7.549 3.116s-3.117 4.595-3.117 7.551c0 2.956 1.039 5.472 3.117 7.551s4.594 3.116 7.549 3.116z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-error\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.667 20h2.667v2.667h-2.667v-2.667zM14.667 9.333h2.667v8h-2.667v-8zM15.987 2.667c-7.36 0-13.32 5.973-13.32 13.333s5.96 13.333 13.32 13.333c7.373 0 13.347-5.973 13.347-13.333s-5.973-13.333-13.347-13.333zM16 26.667c-5.893 0-10.667-4.773-10.667-10.667s4.773-10.667 10.667-10.667c5.893 0 10.667 4.773 10.667 10.667s-4.773 10.667-10.667 10.667z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAuth);\nexport default __webpack_public_path__ + \"static/media/auth.36db63f77c0f501191427a12f1c3cb18.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"authNavigate_link__tp20Y\"};","import { Link } from 'react-router-dom';\nimport style from './authNavigate.module.scss'\n\nexport const AuthNavigate = ({ route, text }) => (\n  <Link className={style.link} to={route}>{text}</Link>\n);","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"registerForm_wrapper__Jatv0\",\"loginFormContainer\":\"registerForm_loginFormContainer__kcfQ4\",\"form\":\"registerForm_form__eXmS0\",\"form_title\":\"registerForm_form_title__w6SaF\",\"login_label\":\"registerForm_login_label__gBH6B\",\"login_paragraph\":\"registerForm_login_paragraph__qdijq\",\"error_paragraph\":\"registerForm_error_paragraph__qdM5n\",\"done_paragraph\":\"registerForm_done_paragraph__W1krW\",\"input_container\":\"registerForm_input_container__kMs0w\",\"icon_error\":\"registerForm_icon_error__sPBUV\",\"icon_done\":\"registerForm_icon_done__jbA57\",\"login_input\":\"registerForm_login_input__FkzlK\",\"error_input\":\"registerForm_error_input__3Icqq\",\"done_input\":\"registerForm_done_input__ErEqn\",\"form_button\":\"registerForm_form_button__eO0Tu\",\"button_text\":\"registerForm_button_text__8k-Z-\",\"error_message\":\"registerForm_error_message__xu9sh\",\"done_message\":\"registerForm_done_message__4kfZ8\",\"svg\":\"registerForm_svg__NFTvg\",\"img\":\"registerForm_img__-rqL4\"};","import { useDispatch } from 'react-redux';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport style from './registerForm.module.scss';\nimport icons from 'images/auth-svg/auth.svg';\nimport { AuthNavigate } from 'components/AuthNavigate/AuthNavigate';\nimport { registerThunk } from 'redux/auth/authOperations';\nimport GooseRegister from 'images/goose-register.png';\nimport GooseRegister2x from 'images/goose-register@2x.png';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    onSubmit: (values, { resetForm }) => {\n      dispatch(\n        registerThunk({\n          name: values.name,\n          email: values.email,\n          password: values.password,\n        })\n      );\n      resetForm();\n    },\n    validationSchema: yup.object().shape({\n      name: yup.string().min(2).max(32).required(),\n      email: yup.string().email().required(),\n      password: yup.string().min(8).max(64).required(),\n    }),\n  });\n\n  return (\n    <div className={style.wrapper}>\n      <div className={style.loginFormContainer}>\n        <form className={style.form} onSubmit={formik.handleSubmit}>\n          <h1 className={style.form_title}>Sign Up</h1>\n          <label className={style.login_label}>\n            <p\n              className={\n                formik.touched.name\n                  ? formik.errors.name\n                    ? style.error_paragraph\n                    : style.done_paragraph\n                  : style.login_paragraph\n              }\n            >\n              Name\n            </p>\n          </label>\n          <div className={style.input_container}>\n            <input\n              className={\n                formik.touched.name\n                  ? formik.errors.name\n                    ? style.error_input\n                    : style.done_input\n                  : style.login_input\n              }\n              type=\"name\"\n              name=\"name\"\n              placeholder=\"Name\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n            />\n            {formik.touched.name ? (\n              formik.errors.name ? (\n                <>\n                  <span className={style.error_message}>\n                    This is an ERROR name\n                  </span>\n                  <svg className={style.icon_error}>\n                    <use href={`${icons}#icon-error`}></use>\n                  </svg>\n                </>\n              ) : (\n                <>\n                  <span className={style.done_message}>\n                    This is an CORRECT name\n                  </span>\n                  <svg className={style.icon_done}>\n                    <use href={`${icons}#icon-done`}></use>\n                  </svg>\n                </>\n              )\n            ) : null}\n          </div>\n          <label className={style.login_label}>\n            <p\n              className={\n                formik.touched.email\n                  ? formik.errors.email\n                    ? style.error_paragraph\n                    : style.done_paragraph\n                  : style.login_paragraph\n              }\n            >\n              Email\n            </p>\n          </label>\n          <div className={style.input_container}>\n            <input\n              className={\n                formik.touched.email\n                  ? formik.errors.email\n                    ? style.error_input\n                    : style.done_input\n                  : style.login_input\n              }\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n            />\n            {formik.touched.email ? (\n              formik.errors.email ? (\n                <>\n                  <span className={style.error_message}>\n                    This is an ERROR email\n                  </span>\n                  <svg className={style.icon_error}>\n                    <use href={`${icons}#icon-error`}></use>\n                  </svg>\n                </>\n              ) : (\n                <>\n                  <span className={style.done_message}>\n                    This is an CORRECT email\n                  </span>\n                  <svg className={style.icon_done}>\n                    <use href={`${icons}#icon-done`}></use>\n                  </svg>\n                </>\n              )\n            ) : null}\n          </div>\n          <label className={style.login_label}>\n            <p\n              className={\n                formik.touched.password\n                  ? formik.errors.password\n                    ? style.error_paragraph\n                    : style.done_paragraph\n                  : style.login_paragraph\n              }\n            >\n              Password\n            </p>\n          </label>\n          <div className={style.input_container}>\n            <input\n              className={\n                formik.touched.password\n                  ? formik.errors.password\n                    ? style.error_input\n                    : style.done_input\n                  : style.login_input\n              }\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n            />\n            {formik.touched.password ? (\n              formik.errors.password ? (\n                <>\n                  <span className={style.error_message}>\n                    This is an ERROR password\n                  </span>\n                  <svg className={style.icon_error}>\n                    <use href={`${icons}#icon-error`}></use>\n                  </svg>\n                </>\n              ) : (\n                <>\n                  <span className={style.done_message}>\n                    This is an CORRECT password\n                  </span>\n                  <svg className={style.icon_done}>\n                    <use href={`${icons}#icon-done`}></use>\n                  </svg>\n                </>\n              )\n            ) : null}\n          </div>\n\n          <button className={style.form_button} type=\"submit\">\n            <span className={style.button_text}>Sign Up</span>\n            <svg className={style.svg}>\n              <use href={`${icons}#icon-log-in`} />\n            </svg>\n          </button>\n        </form>\n\n        <AuthNavigate route={'/login'} text=\"Log In\" />\n        <img\n          className={style.img}\n          srcSet={`${GooseRegister} 1x, ${GooseRegister2x} 2x`}\n          src={`${GooseRegister}`}\n          alt=\"goose\"\n        />\n      </div>\n    </div>\n  );\n};","\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\n const RegisterPage = () => {\n  return <div><RegisterForm /></div>;\n\n};\nexport default RegisterPage;\n"],"names":["AuthNavigate","route","text","className","style","to","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","onSubmit","values","resetForm","registerThunk","validationSchema","yup","shape","min","max","required","handleSubmit","touched","errors","type","placeholder","value","onChange","handleChange","href","icons","srcSet","GooseRegister","GooseRegister2x","src","alt"],"sourceRoot":""}