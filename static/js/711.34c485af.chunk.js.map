{"version":3,"file":"static/js/711.34c485af.chunk.js","mappings":"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","sources":["webpack://goose-track/./src/components/UserProfile/UserProfile.module.scss?1e1d","components/UserProfile/ValidationSchemaProfile.js","components/UserProfile/UserProfile.jsx","components/UserProfile/DatePickerCalendar.js","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profilePageContainer\":\"UserProfile_profilePageContainer__U5i5X\",\"wrapper\":\"UserProfile_wrapper__pgkFI\",\"form\":\"UserProfile_form__hQ3Hr\",\"formAvatar\":\"UserProfile_formAvatar__MZn6c\",\"containerAvatar\":\"UserProfile_containerAvatar__JP+7F\",\"avatarImage\":\"UserProfile_avatarImage__um3Q0\",\"inputUpload\":\"UserProfile_inputUpload__zBtHe\",\"btnUpload\":\"UserProfile_btnUpload__2auCx\",\"avatarName\":\"UserProfile_avatarName__pbfF+\",\"avatarRole\":\"UserProfile_avatarRole__4yvl+\",\"formCenter\":\"UserProfile_formCenter__rv5jM\",\"formRow\":\"UserProfile_formRow__XgjF6\",\"formLabel\":\"UserProfile_formLabel__bcgnV\",\"formInput\":\"UserProfile_formInput__zwMTk\",\"formBtn\":\"UserProfile_formBtn__t7j26\",\"dateIcon\":\"UserProfile_dateIcon__lxV9M\",\"formError\":\"UserProfile_formError__SxKr0\",\"customCalendarStyle\":\"UserProfile_customCalendarStyle__TtfuF\"};","import * as Yup from 'yup';\n\n// Validation schema\nexport const profileSchema = Yup.object({\n  name: Yup.string().max(16, 'Must be 16 characters or less').required(),\n  phone: Yup.string().matches(\n    /(?=.*\\+[0-9]{3}\\s?[0-9]{2}\\s?[0-9]{3}\\s?[0-9]{4,5}$)/,\n    'invalid phone number format'\n  ),\n  birthday: Yup.date().default(() => new Date()),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  skype: Yup.string()\n    .min(6, 'Must be 6 characters or more')\n    .max(16, 'Must be 16 characters or less'),\n});\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport Notiflix from 'notiflix';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { FiPlus, FiChevronDown } from 'react-icons/fi';\nimport { AiOutlineUser } from 'react-icons/ai';\n\nimport { getUser } from 'redux/auth/authSelectors';\nimport {\n  getCurrentUserThunk,\n  updateAvatarThunk,\n  updateUserInfoThunk,\n} from 'redux/auth/authOperations';\n\nimport css from './UserProfile.module.scss';\nimport './DatePickerStyles.scss';\nimport { profileSchema } from './ValidationSchemaProfile';\nimport { isWeekendDay, weekendDayClassName } from './DatePickerCalendar';\n\n// UserProfile\nconst UserProfile = () => {\n  const [newAvatar, setNewAvatar] = useState(null);\n  const [isFormChanged, setIsFormChanged] = useState(false);\n  const [isUpdated, setIsUpdated] = useState(false);\n\n  const user = useSelector(getUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isUpdated) {\n      dispatch(getCurrentUserThunk());\n      setIsUpdated(false);\n    }\n  }, [dispatch, isUpdated]);\n\n  const handleFieldChange = () => {\n    setIsFormChanged(true);\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const profileData = {\n      name: values.name,\n      phone: values.phone,\n      email: values.email,\n      skype: values.skype,\n      birthday: values.birthday,\n    };\n\n    const avatarData = new FormData();\n    avatarData.append('avatar', newAvatar);\n\n    try {\n      if (newAvatar) {\n        await dispatch(updateAvatarThunk(avatarData));\n      }\n\n      await dispatch(updateUserInfoThunk(profileData));\n      Notiflix.Notify.success('User profile is succesfully updated');\n      setIsUpdated(true);\n      setIsFormChanged(false);\n      resetForm();\n    } catch (error) {\n      Notiflix.Notify.failure('Something went wrong. Please try again');\n    }\n  };\n\n  return (\n    <div className={css.profilePageContainer}>\n      <div className={css.wrapper}>\n        <Formik\n          enableReinitialize\n          initialValues={{\n            name: user.name || '',\n            phone: user.phone ? user.phone : '',\n            birthday: user.birthday ? new Date(user.birthday) : new Date(),\n            skype: user ? user.skype : '',\n            email: user ? user.email : '',\n          }}\n          validationSchema={profileSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ values, handleChange, handleBlur, handleSubmit }) => (\n            <Form\n              autoComplete=\"off\"\n              className={css.form}\n              onSubmit={handleSubmit}\n            >\n              <div className={css.formAvatar}>\n                <div className={css.containerAvatar}>\n                  {newAvatar ? (\n                    <img\n                      src={URL.createObjectURL(newAvatar)}\n                      className={css.avatarImage}\n                      accept=\"image/*,.png,.jpg,.gif,.web\"\n                      alt=\"avatar\"\n                    />\n                  ) : user?.avatarURL ? (\n                    <img\n                      src={user?.avatarURL}\n                      className={css.avatarImage}\n                      alt=\"avatar\"\n                    />\n                  ) : (\n                    <AiOutlineUser className={css.avatarIcon} />\n                  )}\n                  <label htmlFor=\"avatar\">\n                    <button className={css.btnUpload}>\n                      <FiPlus />\n                    </button>\n                    <input\n                      className={css.inputUpload}\n                      id=\"avatar\"\n                      type=\"file\"\n                      onChange={e => {\n                        setNewAvatar(e.target.files[0]);\n                        handleChange(e);\n                        handleFieldChange();\n                      }}\n                      accept=\"image/*,.png,.jpg,.gif,.web\"\n                      name=\"avatar\"\n                    ></input>\n                  </label>\n                </div>\n\n                <h3 className={css.avatarName}>\n                  {user.name ? user.name : 'No name'}\n                </h3>\n                <span className={css.avatarRole}>User</span>\n              </div>\n\n              <div className={css.formCenter}>\n                <div className={css.formRow}>\n                  <label className={css.formLabel} htmlFor=\"name\">\n                    User Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    className={css.formInput}\n                    value={values.name}\n                    onChange={e => {\n                      handleChange(e);\n                      handleFieldChange();\n                    }}\n                    onBlur={handleBlur}\n                    placeholder=\"Name\"\n                  ></input>\n                  <ErrorMessage\n                    component=\"div\"\n                    className={css.formError}\n                    name=\"name\"\n                  />\n                </div>\n\n                <div className={css.formRow}>\n                  <label className={css.formLabel} htmlFor=\"phone\">\n                    Phone\n                  </label>\n                  <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    id=\"phone\"\n                    className={css.formInput}\n                    value={values.phone}\n                    onChange={e => {\n                      handleChange(e);\n                      handleFieldChange();\n                    }}\n                    onBlur={handleBlur}\n                    placeholder=\"+380\"\n                  ></input>\n                  <ErrorMessage\n                    component=\"div\"\n                    className={css.formError}\n                    name=\"phone\"\n                  />\n                </div>\n\n                <div className={css.formRow}>\n                  <FiChevronDown className={css.dateIcon} />\n                  <label className={css.formLabel} htmlFor=\"birthday\">\n                    Birthday\n                  </label>\n                  <DatePicker\n                    type=\"date\"\n                    name=\"birthday\"\n                    id=\"birthday\"\n                    input={true}\n                    formatWeekDay={nameOfDay => nameOfDay.slice(0, 1)}\n                    dayClassName={date =>\n                      isWeekendDay(date) ? weekendDayClassName : undefined\n                    }\n                    className={css.formInput}\n                    calendarClassName={css.customCalendarStyle}\n                    selected={values.birthday}\n                    onChange={date => {\n                      handleChange({\n                        target: { name: 'birthday', value: date },\n                      });\n                      handleFieldChange();\n                    }}\n                    dateFormat=\"dd/MM/yyyy\"\n                    calendarStartDay={1}\n                    peekNextMonth\n                    showMonthDropdown\n                    showYearDropdown\n                    dropdownMode=\"select\"\n                    closeOnScroll={e => e.target === document}\n                  />\n                  <ErrorMessage className={css.formError} name=\"birthday\" />\n                </div>\n\n                <div className={css.formRow}>\n                  <label className={css.formLabel} htmlFor=\"skype\">\n                    Skype\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"skype\"\n                    id=\"skype\"\n                    className={css.formInput}\n                    placeholder=\"Skype number or username\"\n                    value={values.skype}\n                    onChange={e => {\n                      handleChange(e);\n                      handleFieldChange();\n                    }}\n                    onBlur={handleBlur}\n                  ></input>\n                  <ErrorMessage\n                    component=\"div\"\n                    className={css.formError}\n                    name=\"skype\"\n                  />\n                </div>\n\n                <div className={css.formRow}>\n                  <label className={css.formLabel} htmlFor=\"email\">\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    className={css.formInput}\n                    placeholder=\"Email\"\n                    value={values.email}\n                    onChange={e => {\n                      handleChange(e);\n                      handleFieldChange();\n                    }}\n                    onBlur={handleBlur}\n                  ></input>\n                  <ErrorMessage\n                    component=\"div\"\n                    className={css.formError}\n                    name=\"email\"\n                  />\n                </div>\n              </div>\n              <button\n                className={css.formBtn}\n                type=\"submit\"\n                disabled={!isFormChanged}\n              >\n                Save changes\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\nexport default UserProfile;\n","export const isWeekendDay = date => {\n  const day = date.getDay();\n  return day === 0 || day === 6; // Sunday and Saturday\n};\n\nexport const weekendDayClassName = 'weekend-day';\n","import UserProfile from 'components/UserProfile/UserProfile';\nimport React from 'react';\n\nconst AccountPage = () => {\n  return (\n    <>\n      <UserProfile />\n    </>\n  );\n};\nexport default AccountPage;\n"],"names":["profileSchema","Yup","name","max","required","phone","matches","birthday","default","Date","email","skype","min","useState","newAvatar","setNewAvatar","isFormChanged","setIsFormChanged","isUpdated","setIsUpdated","user","useSelector","getUser","dispatch","useDispatch","useEffect","getCurrentUserThunk","handleFieldChange","handleSubmit","values","resetForm","profileData","avatarData","FormData","append","updateAvatarThunk","updateUserInfoThunk","Notiflix","className","css","enableReinitialize","initialValues","validationSchema","onSubmit","handleChange","handleBlur","autoComplete","src","URL","createObjectURL","accept","alt","avatarURL","htmlFor","id","type","onChange","e","target","files","value","onBlur","placeholder","component","input","formatWeekDay","nameOfDay","slice","dayClassName","date","day","getDay","isWeekendDay","undefined","calendarClassName","selected","dateFormat","calendarStartDay","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","closeOnScroll","document","disabled"],"sourceRoot":""}