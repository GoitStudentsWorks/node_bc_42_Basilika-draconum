{"version":3,"file":"static/js/224.0ac70a48.chunk.js","mappings":"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","sources":["hooks/handleChangeMonth.js","hooks/handleChangeDay.js","webpack://goose-track/./src/components/CalendarToolbar/PeriodPaginator/CalendarDatePicker/calendar-picker.module.scss?bfae","components/CalendarToolbar/PeriodPaginator/CalendarDatePicker/CalendarDatePicker.jsx","webpack://goose-track/./src/components/CalendarToolbar/PeriodPaginator/PeriodPaginator.module.css?94da","components/CalendarToolbar/PeriodPaginator/PeriodPaginator.jsx","webpack://goose-track/./src/components/CalendarToolbar/PeriodTypeSelect/PeriodTypeSelect.module.css?2da3","components/CalendarToolbar/PeriodTypeSelect/PeriodTypeSelect.jsx","webpack://goose-track/./src/components/CalendarToolbar/CalendarToolbar.module.css?1eb8","components/CalendarToolbar/CalendarToolbar.jsx","webpack://goose-track/./src/pages/CalendarPage/calendar-page.module.scss?7184","pages/CalendarPage/CalendarPage.jsx"],"sourcesContent":["export const handleChangeMonth = (date, amount) => {\n  Date.isLeapYear = year => {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n  };\n  Date.getDaysInMonth = (year, month) => {\n    return [\n      31,\n      Date.isLeapYear(year) ? 29 : 28,\n      31,\n      30,\n      31,\n      30,\n      31,\n      31,\n      30,\n      31,\n      30,\n      31,\n    ][month];\n  };\n\n  // eslint-disable-next-line no-extend-native\n  Date.prototype.isLeapYear = function () {\n    return Date.isLeapYear(this.getFullYear());\n  };\n\n  // eslint-disable-next-line no-extend-native\n  Date.prototype.getDaysInMonth = function () {\n    return Date.getDaysInMonth(this.getFullYear(), this.getMonth());\n  };\n\n  // eslint-disable-next-line no-extend-native\n  Date.prototype.addMonths = function (value) {\n    let n = this.getDate();\n    this.setDate(1);\n    this.setMonth(this.getMonth() + value);\n    this.setDate(Math.min(n, this.getDaysInMonth()));\n    return this;\n  };\n  // eslint-disable-next-line no-extend-native\n  Date.prototype.addDays = function (value) {\n    this.setDate(this.getDate() + value);\n    return this;\n  };\n\n  const myDate = new Date(date);\n\n  const result1 = myDate.addMonths(amount);\n\n  return result1;\n};\n","export const handleChangeDay = (date, amount) => {\n  Date.isLeapYear = year => {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n  };\n  Date.getDaysInMonth = (year, month) => {\n    return [\n      31,\n      Date.isLeapYear(year) ? 29 : 28,\n      31,\n      30,\n      31,\n      30,\n      31,\n      31,\n      30,\n      31,\n      30,\n      31,\n    ][month];\n  };\n\n  // eslint-disable-next-line no-extend-native\n  Date.prototype.isLeapYear = function () {\n    return Date.isLeapYear(this.getFullYear());\n  };\n\n  // eslint-disable-next-line no-extend-native\n  Date.prototype.getDaysInMonth = function () {\n    return Date.getDaysInMonth(this.getFullYear(), this.getMonth());\n  };\n\n  // eslint-disable-next-line no-extend-native\n  Date.prototype.addMonths = function (value) {\n    let n = this.getDate();\n    this.setDate(1);\n    this.setMonth(this.getMonth() + value);\n    this.setDate(Math.min(n, this.getDaysInMonth()));\n    return this;\n  };\n  // eslint-disable-next-line no-extend-native\n  Date.prototype.addDays = function (value) {\n    this.setDate(this.getDate() + value);\n    return this;\n  };\n\n  const myDate = new Date(date);\n\n  const result1 = myDate.addDays(amount);\n\n  return result1;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"calendarInput\":\"calendar-picker_calendarInput__-MpIe\",\"customCalendarStyle\":\"calendar-picker_customCalendarStyle__csVxy\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { format, parseISO } from 'date-fns';\nimport { selectDate } from 'redux/date/dateSelectors';\nimport { setDate } from 'redux/date/dateSlice';\nimport './DatePickerStyles.scss';\nimport css from './calendar-picker.module.scss';\n\nconst CalendarDatePicker = () => {\n  const choosedDay = useSelector(selectDate);\n  const dateFull = parseISO(choosedDay, 'yyyy-MM-dd');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { pathname } = location;\n\n  return (\n    <>\n      {pathname.slice(0, 16) === '/calendar/month/' ? (\n        <DatePicker\n          dateFormat=\"MMMM Y\"\n          selected={dateFull}\n          showMonthYearPicker\n          onChange={date => {\n            dispatch(setDate(format(date, 'yyyy-MM-dd')));\n            navigate(`/calendar/month/${format(date, 'yyyy-MMMM')}`);\n          }}\n          className={css.calendarInput}\n          calendarClassName={css.customCalendarStyle}\n        />\n      ) : (\n        <DatePicker\n          dateFormat=\"d MMMM Y\"\n          selected={dateFull}\n          calendarStartDay={1}\n          onChange={date => {\n            dispatch(setDate(format(date, 'yyyy-MM-dd')));\n            navigate(`/calendar/day/${format(date, 'yyyy-MM-dd')}`);\n          }}\n          className={css.calendarInput}\n          calendarClassName={css.customCalendarStyle}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CalendarDatePicker;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PeriodPaginator_wrapper__-FGEj\",\"name\":\"PeriodPaginator_name__Sy7Mr\",\"buttonsContainer\":\"PeriodPaginator_buttonsContainer__vtihw\",\"button\":\"PeriodPaginator_button__PzLTH\",\"buttonRight\":\"PeriodPaginator_buttonRight__uo98y\",\"buttonLeft\":\"PeriodPaginator_buttonLeft__wT7+O\"};","import { useNavigate, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format, parse } from 'date-fns';\nimport { handleChangeMonth } from 'hooks/handleChangeMonth.js';\nimport { handleChangeDay } from 'hooks/handleChangeDay.js';\nimport { setDate } from 'redux/date/dateSlice';\nimport { selectDate } from 'redux/date/dateSelectors';\nimport CalendarDatePicker from './CalendarDatePicker/CalendarDatePicker';\nimport styles from './PeriodPaginator.module.css';\n\nexport const PeriodPaginator = () => {\n  const choosedDay = useSelector(selectDate);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { pathname } = location;\n\n  const dateFull = parse(choosedDay, 'yyyy-MM-dd', Date.now());\n\n  const handlePrevMonth = () => {\n    dispatch(setDate(format(handleChangeMonth(dateFull, -1), 'yyyy-MM-dd')));\n    navigate(\n      `/calendar/month/${format(handleChangeMonth(dateFull, -1), 'yyyy-MMMM')}`\n    );\n  };\n\n  const handleNextMonth = () => {\n    dispatch(setDate(format(handleChangeMonth(dateFull, 1), 'yyyy-MM-dd')));\n    navigate(\n      `/calendar/month/${format(handleChangeMonth(dateFull, 1), 'yyyy-MMMM')}`\n    );\n  };\n\n  const handlePrevDay = () => {\n    dispatch(setDate(format(handleChangeDay(dateFull, -1), 'yyyy-MM-dd')));\n    navigate(\n      `/calendar/day/${format(handleChangeDay(dateFull, -1), 'yyyy-MM-dd')}`\n    );\n  };\n\n  const handleNextDay = () => {\n    dispatch(setDate(format(handleChangeDay(dateFull, 1), 'yyyy-MM-dd')));\n    navigate(\n      `/calendar/day/${format(handleChangeDay(dateFull, 1), 'yyyy-MM-dd')}`\n    );\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.nameContainer}>\n        {/* <p className={styles.name}>\n          {pathname.slice(0, 16) === '/calendar/month/'\n            ? format(dateFull, 'MMMM Y')\n            : format(dateFull, 'd MMMM Y')}\n        </p> */}\n        <CalendarDatePicker />\n      </div>\n\n      <div className={styles.buttonsContainer}>\n        <button\n          className={`${styles.button} ${styles.buttonLeft}`}\n          type=\"button\"\n          onClick={\n            pathname.slice(0, 16) === '/calendar/month/'\n              ? handlePrevMonth\n              : handlePrevDay\n          }\n        >\n          <svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M6 12L10 8L6 4\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </button>\n        <button\n          className={`${styles.button} ${styles.buttonRight}`}\n          type=\"button\"\n          onClick={\n            pathname.slice(0, 16) === '/calendar/month/'\n              ? handleNextMonth\n              : handleNextDay\n          }\n        >\n          <svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M6 12L10 8L6 4\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"periodTypeSelectMarkUp\":\"PeriodTypeSelect_periodTypeSelectMarkUp__csKEb\",\"navLinkMonth\":\"PeriodTypeSelect_navLinkMonth__uUMFS\",\"activeLinkMonth\":\"PeriodTypeSelect_activeLinkMonth__IMILs\",\"navLinkDay\":\"PeriodTypeSelect_navLinkDay__Vfllo\",\"activeLinkDay\":\"PeriodTypeSelect_activeLinkDay__KvR6l\"};","import { useNavigate, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { setDate } from 'redux/date/dateSlice';\nimport { selectDate } from 'redux/date/dateSelectors';\nimport styles from './PeriodTypeSelect.module.css';\n\nexport const PeriodTypeSelect = () => {\n  const choosedDay = useSelector(selectDate);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const { pathname } = location;\n\n  const currentDateMonth = format(new Date(), 'yyyy-MMMM');\n  const currentDateDay = format(new Date(), 'yyyy-MM-dd');\n\n  const handleClickMonth = () => {\n    dispatch(setDate(currentDateDay));\n    navigate(`/calendar/month/${currentDateMonth}`);\n  };\n\n  const handleClickDay = () => {\n    dispatch(setDate(currentDateDay));\n    navigate(`/calendar/day/${currentDateDay}`);\n  };\n\n  return (\n    <div className={styles.periodTypeSelectMarkUp}>\n      <button\n        className={\n          pathname.slice(0, 16) === `/calendar/month/`\n            ? styles.activeLinkMonth\n            : styles.navLinkMonth\n        }\n        onClick={() => handleClickMonth()}\n      >\n        Month\n      </button>\n      <button\n        className={\n          pathname === `/calendar/day/${choosedDay}`\n            ? styles.activeLinkDay\n            : styles.navLinkDay\n        }\n        onClick={() => handleClickDay()}\n      >\n        Day\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CalendarToolbar_wrapper__zs0r1\"};","import { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { PeriodPaginator } from './PeriodPaginator/PeriodPaginator';\nimport { PeriodTypeSelect } from './PeriodTypeSelect/PeriodTypeSelect';\nimport styles from './CalendarToolbar.module.css';\n\nconst CalendarToolbar = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const formattedCurrentDate = format(new Date(), 'yyyy-MMMM');\n\n  useEffect(() => {\n    if (location.pathname === '/calendar') {\n      navigate(`/calendar/month/${formattedCurrentDate}`);\n    }\n  }, [formattedCurrentDate, navigate, location.pathname]);\n\n  return (\n    <div className={styles.wrapper}>\n      <PeriodPaginator />\n      <PeriodTypeSelect />\n    </div>\n  );\n};\n\nexport default CalendarToolbar;\n","// extracted by mini-css-extract-plugin\nexport default {\"calendarPageContainer\":\"calendar-page_calendarPageContainer__LNklU\"};","import { Suspense, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport CalendarToolbar from 'components/CalendarToolbar/CalendarToolbar';\nimport css from './calendar-page.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTasks } from 'redux/tasks/tasksOperations';\nimport { getAccessToken } from 'redux/auth/authSelectors';\n\nconst CalendarPage = () => {\n  const dispatch = useDispatch();\n  const token = useSelector(getAccessToken);\n\n  useEffect(() => {\n     token &&  dispatch(fetchTasks());\n  }, [dispatch, token]);\n\n  return (\n    <div className={css.calendarPageContainer}>\n      <CalendarToolbar />\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default CalendarPage;\n"],"names":["handleChangeMonth","date","amount","Date","isLeapYear","year","getDaysInMonth","month","prototype","this","getFullYear","getMonth","addMonths","value","n","getDate","setDate","setMonth","Math","min","addDays","handleChangeDay","choosedDay","useSelector","selectDate","dateFull","parseISO","dispatch","useDispatch","navigate","useNavigate","pathname","useLocation","slice","dateFormat","selected","showMonthYearPicker","onChange","format","className","css","calendarClassName","calendarStartDay","PeriodPaginator","parse","now","styles","type","onClick","viewBox","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","PeriodTypeSelect","currentDateMonth","currentDateDay","location","formattedCurrentDate","useEffect","token","getAccessToken","fetchTasks","Suspense","fallback"],"sourceRoot":""}